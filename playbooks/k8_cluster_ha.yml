---

- name: Set hosts facts
  hosts: all
  roles:
  - { role: ../roles/set_host_facts, become: true, user: admin }

- name: Setup load balancer
  hosts: load_balancers
  vars:
    master_hostnames: "{{ groups['masters'] | join(' ') }}"
  roles:
  - { role: ../roles/docker, become: true, user: admin }
  - { role: ../roles/k8-masters-load-balancer, become: true, user: admin }

- name: Setup Docker and Kubeadm dependencies on k8 machines
  hosts: masters,workers
  roles:
  - { role: ../roles/docker, become: true, user: admin }
  - { role: ../roles/kubeadm, become: true, user: admin }

- name: Set api_url to load balancer ip if not defined
  hosts: masters
  tasks:
  - set_fact: 
      api_url: "{{ groups['load_balancers'][0] }}"
    when: api_url is undefined

- name: Prepare inventory list for masters
  hosts: masters
  tasks:
  - set_fact: 
      inventory_hostnames: "{{ groups['masters'] | join(' ') }}"

- name: Prepare peer inventory list for masters
  hosts: masters
  tasks:
  - set_fact: 
      peer_inventory_hostnames: "{{ groups['masters'] | map('extract', hostvars, 'peer_ip') | list | join(' ') }}"

- name: Set api_url to load balancer ip if not defined
  hosts: masters
  tasks:
  - set_fact: 
      api_url: "{{ groups['load_balancers'][0] }}"
    when: api_url is undefined

- name: Install cfssl on masters
  hosts: masters
  roles:
  - { role: ../roles/cfssl, become: true, user: admin }

- name: Setup etcd credentials on master 0
  hosts: masters[0]
  roles:
  - { role: ../roles/etcd_certificates, become: true, user: admin }
  - { role: ../roles/get_etcd_certificates, become: true, user: admin }

- name: Setup etcd credentials on other masters
  hosts: masters[1:]
  roles:
  - { role: ../roles/send_etcd_certificates, become: true, user: admin }

- name: Complete etcd setup
  hosts: masters
  roles:
  - { role: ../roles/etcd_peer_certificates, become: true, user: admin }
  - { role: ../roles/etcd, become: true, user: admin }

- name: Initialize first master, setup workers' network, get certificates and get join command
  hosts: masters[0]
  roles:
  - { role: ../roles/k8-master-init, become: true, user: admin }
  - { role: ../roles/k8-flannel-network, become: true, user: admin }
  - { role: ../roles/k8-get-master-certificates, become: true, user: admin }
  - { role: ../roles/k8-store-join-command, become: true, user: admin }

- name: Copy certificates to other masters and initialize them
  hosts: masters[1:]
  roles:
  - { role: ../roles/k8-send-master-certificates, become: true, user: admin }
  - { role: ../roles/k8-master-init, become: true, user: admin }

- name: Install Workers
  hosts: workers
  roles:
  - { role: ../roles/k8-join-master, become: true, user: admin }